Exclusivity = c(connective2_kappa$value)#, connective2_kappa$p.value)
)
knitr::kable(Kappas)
all_kappas <- data.frame()
rater_1 <-
read.csv("../2_annotated_data/reliability/Naima_Masoud_f.csv") %>%
select(speech_act_1:exclusivity_1)
rater_2 <-
read.csv("../2_annotated_data/reliability/Naima_Akshay_f.csv") %>%
select(speech_act_2:exclusivity_2)
for (i in 0:7) {
Rs <- cbind(rater_1[(i*30):(30*(i+1)),], rater_2[(i*30):(30*(i+1)),])
connective_kappa <-
Rs %>%
select(connective_1,connective_2) %>%
kappa2("unweighted")
connective2_kappa <-
Rs %>%
select(exclusivity_1,exclusivity_2) %>%
kappa2("unweighted")
synlevel_kappa <-
Rs %>%
select(syn_level_1,syn_level_2) %>%
kappa2("unweighted")
utterance_type_kappa <-
Rs %>%
select(utterance_type_1,utterance_type_2) %>%
kappa2("unweighted")
exclusion_kappa <-
Rs %>%
select(exclusion_1,exclusion_2) %>%
kappa2("unweighted")
intonation_kappa <-
Rs %>%
select(intonation_1,intonation_2) %>%
kappa2("unweighted")
speechAct_kappa <-
Rs %>%
select(speech_act_1,speech_act_2) %>%
kappa2("unweighted")
answers_kappa <-
Rs %>%
select(answer_1,answer_2) %>%
kappa2("unweighted")
Kappas <-
data.frame(
`Utterance Type` = c(utterance_type_kappa$value),#, utterance_type_kappa$p.value),
Intonation = c(intonation_kappa$value),#, intonation_kappa$p.value),
`Syntactic Level` = c(synlevel_kappa$value),#, synlevel_kappa$p.value),
Consistency = c(exclusion_kappa$value),#, exclusion_kappa$p.value),
`Speech Act Type` = c(speechAct_kappa$value),#, speechAct_kappa$p.value),
Answers = c(answers_kappa$value),#, answers_kappa$p.value),
Connective = c(connective_kappa$value),#, connective_kappa$p.value),
Exclusivity = c(connective2_kappa$value)#, connective2_kappa$p.value)
)
all_kappas <- rbind(all_kappas, Kappas)
}
all_kappas[,"Iteration"] <- seq(1:8)
graph_datas <-
all_kappas %>%
gather(annotation_category, kappa_value, Utterance.Type:Exclusivity)
ggplot(graph_datas, aes(x=Iteration,y=kappa_value, color=annotation_category)) + geom_line() + labs(y="Kappa Value") + geom_hline(yintercept=0.6)
knitr::kable(all_kappas)
all_kappas
all_kappas[Utterance.Type]
all_kappas['Utterance.Type']
all_kappas
all_kappas['Utterance.Type','Intonation','Consistency','Exclusivity']
all_kappas['Utterance.Type','Intonation','Consistency']
all_kappas['Utterance.Type':'Intonation']
all_kappas[c('Utterance.Type','Intonation','Consistency','Exclusivity')]
all_kappas[,"Iteration"] <- seq(1:8)
graph_datas <-
all_kappas[c('Utterance.Type','Intonation','Consistency','Exclusivity')] %>%
gather(annotation_category, kappa_value, c('Utterance.Type','Intonation','Consistency','Exclusivity'))
ggplot(graph_datas, aes(x=Iteration,y=kappa_value, color=annotation_category)) + geom_line() + labs(y="Kappa Value") + geom_hline(yintercept=0.6)
all_kappas[,"Iteration"] <- seq(1:8)
graph_datas <-
all_kappas[c('Utterance.Type','Intonation','Consistency','Exclusivity','Iteration')] %>%
gather(annotation_category, kappa_value, c('Utterance.Type','Intonation','Consistency','Exclusivity'))
ggplot(graph_datas, aes(x=Iteration,y=kappa_value, color=annotation_category)) + geom_line() + labs(y="Kappa Value") + geom_hline(yintercept=0.6)
library (irr)
library(tidyverse)
library(caret)
library(forcats)
library(ggthemes)
rater_1 <-
read.csv("../2_annotated_data/reliability/Naima_Masoud_f.csv") %>%
select(speech_act_1:exclusivity_1)
rater_2 <-
read.csv("../2_annotated_data/reliability/Naima_Akshay_f.csv") %>%
select(speech_act_2:exclusivity_2)
Rs <- cbind(rater_1[150:241,], rater_2[150:241,])
connective_kappa <-
Rs %>%
select(connective_1,connective_2) %>%
kappa2("unweighted")
connective2_kappa <-
Rs %>%
select(exclusivity_1,exclusivity_2) %>%
kappa2("unweighted")
synlevel_kappa <-
Rs %>%
select(syn_level_1,syn_level_2) %>%
kappa2("unweighted")
utterance_type_kappa <-
Rs %>%
select(utterance_type_1,utterance_type_2) %>%
kappa2("unweighted")
exclusion_kappa <-
Rs %>%
select(exclusion_1,exclusion_2) %>%
kappa2("unweighted")
intonation_kappa <-
Rs %>%
select(intonation_1,intonation_2) %>%
kappa2("unweighted")
speechAct_kappa <-
Rs %>%
select(speech_act_1,speech_act_2) %>%
kappa2("unweighted")
answers_kappa <-
Rs %>%
select(answer_1,answer_2) %>%
kappa2("unweighted")
Kappas <-
data.frame(
`Utterance Type` = c(utterance_type_kappa$value),#, utterance_type_kappa$p.value),
Intonation = c(intonation_kappa$value),#, intonation_kappa$p.value),
`Syntactic Level` = c(synlevel_kappa$value),#, synlevel_kappa$p.value),
Consistency = c(exclusion_kappa$value),#, exclusion_kappa$p.value),
`Speech Act Type` = c(speechAct_kappa$value),#, speechAct_kappa$p.value),
Answers = c(answers_kappa$value),#, answers_kappa$p.value),
Connective = c(connective_kappa$value),#, connective_kappa$p.value),
Exclusivity = c(connective2_kappa$value)#, connective2_kappa$p.value)
)
knitr::kable(Kappas)
all_kappas <- data.frame()
rater_1 <-
read.csv("../2_annotated_data/reliability/Naima_Masoud_f.csv") %>%
select(speech_act_1:exclusivity_1)
rater_2 <-
read.csv("../2_annotated_data/reliability/Naima_Akshay_f.csv") %>%
select(speech_act_2:exclusivity_2)
for (i in 0:7) {
Rs <- cbind(rater_1[(i*30):(30*(i+1)),], rater_2[(i*30):(30*(i+1)),])
connective_kappa <-
Rs %>%
select(connective_1,connective_2) %>%
kappa2("unweighted")
connective2_kappa <-
Rs %>%
select(exclusivity_1,exclusivity_2) %>%
kappa2("unweighted")
synlevel_kappa <-
Rs %>%
select(syn_level_1,syn_level_2) %>%
kappa2("unweighted")
utterance_type_kappa <-
Rs %>%
select(utterance_type_1,utterance_type_2) %>%
kappa2("unweighted")
exclusion_kappa <-
Rs %>%
select(exclusion_1,exclusion_2) %>%
kappa2("unweighted")
intonation_kappa <-
Rs %>%
select(intonation_1,intonation_2) %>%
kappa2("unweighted")
speechAct_kappa <-
Rs %>%
select(speech_act_1,speech_act_2) %>%
kappa2("unweighted")
answers_kappa <-
Rs %>%
select(answer_1,answer_2) %>%
kappa2("unweighted")
Kappas <-
data.frame(
`Utterance Type` = c(utterance_type_kappa$value),#, utterance_type_kappa$p.value),
Intonation = c(intonation_kappa$value),#, intonation_kappa$p.value),
`Syntactic Level` = c(synlevel_kappa$value),#, synlevel_kappa$p.value),
Consistency = c(exclusion_kappa$value),#, exclusion_kappa$p.value),
`Speech Act Type` = c(speechAct_kappa$value),#, speechAct_kappa$p.value),
Answers = c(answers_kappa$value),#, answers_kappa$p.value),
Connective = c(connective_kappa$value),#, connective_kappa$p.value),
Exclusivity = c(connective2_kappa$value)#, connective2_kappa$p.value)
)
all_kappas <- rbind(all_kappas, Kappas)
}
all_kappas[,"Iteration"] <- seq(1:8)
graph_datas <-
all_kappas[c('Utterance.Type','Intonation','Consistency','Exclusivity','Iteration')] %>%
gather(annotation_category, kappa_value, c('Utterance.Type','Intonation','Consistency','Exclusivity'))
ggplot(graph_datas, aes(x=Iteration,y=kappa_value, color=annotation_category)) + geom_line() + labs(y="Kappa Value") + geom_hline(yintercept=0.6)
knitr::kable(all_kappas)
all_kappas[c('Utterance.Type','Intonation','Consistency','Exclusivity')]
all_kappas[,"Iteration"] <- seq(1:8)
graph_datas <-
all_kappas[c('Utterance.Type','Intonation','Consistency','Exclusivity','Iteration')] %>%
gather(annotation_category, kappa_value, c('Utterance.Type','Intonation','Consistency','Exclusivity'))
ggplot(graph_datas, aes(x=Iteration,y=kappa_value, color=annotation_category)) + geom_line() + labs(y="Kappa Value") + geom_hline(yintercept=0.6)
ggsave('kappas.png')
library (ggplot2)
library (scales)
library(grid)
library(gridExtra)
packages.install('gridExtra')
install.packages('gridExtra')
library (ggplot2)
library (scales)
library(grid)
library(gridExtra)
alex_data <- read.csv("../2_annotated_data/ProvidenceData-alex.csv")
lily_data <- read.csv("../2_annotated_data/ProvidenceData-lily.csv")
will_data <- read.csv("../2_annotated_data/ProvidenceData-will.csv")
vio_data  <- read.csv("../2_annotated_data/ProvidenceData-vio.csv")
or_data <- rbind (alex_data, lily_data, will_data, vio_data)
# Overall frequency of
ggplot(or_data, aes(age_m)) +
geom_histogram(binwidth = 0.5) +
labs(x="Age (months)", y="Frequency", title= "") +
theme(text = element_text(size=14))
ggplot(filter(or_data, syncat!="S" & disjunct!="EXC" & intonation!=2), aes(connective)) +
geom_bar(aes(), width = 0.5, fill="navyblue") +
labs(x="", y="", title= "")+
theme(text = element_text(size=30))
OR_alex  <- ggplot(alex_data, aes(connective)) +
geom_bar(aes(y = (..count..)/sum(..count..)), width = 0.5) +
scale_y_continuous(labels=percent_format()) +
labs(x="Alex", y="", title= "")+
theme(text = element_text(size=20))
OR_lily  <- ggplot(lily_data, aes(connective)) +
geom_bar(aes(y = (..count..)/sum(..count..)), width = 0.5) +
scale_y_continuous(labels=percent_format()) +
labs(x="Lily", y="", title= "") +
theme(text = element_text(size=20))
OR_will  <- ggplot(will_data, aes(connective)) +
geom_bar(aes(y = (..count..)/sum(..count..)), width = 0.5) +
scale_y_continuous(labels=percent_format()) +
labs(x="William", y="", title= "") +
theme(text = element_text(size=20))
OR_vio  <- ggplot(vio_data, aes(connective)) +
geom_bar(aes(y = (..count..)/sum(..count..)), width = 0.5) +
scale_y_continuous(labels=percent_format()) +
labs(x="Violet", y="", title= "") +
theme(text = element_text(size=20))
OR_sem  <- ggplot(or_data, aes(connective)) +
geom_bar(aes(y = (..count..)/sum(..count..)), width = 0.5) +
scale_y_continuous(labels=percent_format()) +
labs(x="", y="", title= "Connective Meanings") +
theme(text = element_text(size=20))
grid.arrange(OR_will, OR_vio, OR_alex, OR_lily, ncol = 2, top = "connective meanings")
ggplot(or_data, aes(connective)) +
geom_bar(aes(y = (..count..)/sum(..count..)), width = 0.5) +
scale_y_continuous(labels=percent_format()) +
labs(x="", y="", title= "")+
theme(text = element_text(size=20)) + facet_wrap(~disjunct)
ggplot(or_data, aes(connective)) +
geom_bar(aes(y = (..count..)/sum(..count..)), width = 0.5) +
scale_y_continuous(labels=percent_format()) +
labs(x="", y="", title= "")+
theme(text = element_text(size=20)) + facet_wrap(~Speech.Act)
ggplot(or_data, aes(connective)) +
geom_bar(aes(y = (..count..)/sum(..count..)), width = 0.5) +
scale_y_continuous(labels=percent_format()) +
labs(x="", y="", title= "") + facet_wrap(~Speech.Act)
library(tidyverse)
library(ggthemes)
library(bootstrap)
packages.install('bootstrap')
install.packages('bootstrap')
library(tidyverse)
library(ggthemes)
library(bootstrap)
library(forcats)
library (irr)
library(caret)
library(lme4)
install.packages('lme4')
library(tidyverse)
library(ggthemes)
library(bootstrap)
library(forcats)
library (irr)
library(caret)
library(lme4)
library(lmerTest)
install.packages('lmerTest')
library(tidyverse)
library(ggthemes)
library(bootstrap)
library(forcats)
library (irr)
library(caret)
library(lme4)
library(lmerTest)
## for bootstrapping 95% confidence intervals
theta <- function(x,xdata) {mean(xdata[x])}
ci.low <- function(x) {
quantile(bootstrap(1:length(x),1000,theta,x)$thetastar,.025)}
ci.high <- function(x) {
quantile(bootstrap(1:length(x),1000,theta,x)$thetastar,.975)}
alex_data <- read.csv("../2_annotated_data/ProvidenceData-alex.csv", nrows=100)
lily_data <- read.csv("../2_annotated_data/ProvidenceData-lily.csv", nrows=99)
vio_data <- read.csv("../2_annotated_data/ProvidenceData-vio.csv", nrows=102)
will_data <- read.csv("../2_annotated_data/ProvidenceData-will.csv", nrows=100)
naima_data <- read.csv("../2_annotated_data/ProvidenceOR-Naima.csv", nrows=241)
naima_data <-
naima_data %>%
filter(!is.na(exclusivity), !is.na(intonation))
all_data <- rbind(alex_data, lily_data, vio_data, will_data, naima_data)
all_data$intonation <- as.factor(all_data$intonation)
all_data$exclusion <- fct_recode(all_data$exclusion, "Consistent" = "ELS", "Inconsistent" = "EXC")
all_data$intonation <- fct_recode(all_data$intonation, "Flat" = "0", "Rising" = "1", "Rise-Fall" = "2")
rater_1 <-
read.csv("../2_annotated_data/reliability/Naima_Masoud_f.csv") %>%
select(speech_act_1:exclusivity_1)
rater_2 <-
read.csv("../2_annotated_data/reliability/Naima_Akshay_f.csv") %>%
select(speech_act_2:exclusivity_2)
Rs <- cbind(rater_1[150:241,], rater_2[150:241,])
exclusivity_kappa <-
Rs %>%
select(exclusivity_1,exclusivity_2) %>%
kappa2("unweighted")
disjunct_type_kappa <-
Rs %>%
select(exclusion_1,exclusion_2) %>%
kappa2("unweighted")
intonation_kappa <-
Rs %>%
select(intonation_1,intonation_2) %>%
kappa2("unweighted")
raw_data <-
all_data %>%
group_by(id, exclusivity) %>%
summarise(counts= n()) %>%
spread(exclusivity, counts) %>%
replace(is.na(.), 0) %>%
mutate(total = IN + EX) %>%
gather(EXIN, counts, EX:IN) %>%
mutate(prop = counts / total) %>%
group_by(EXIN) %>%
summarize(cih = ci.high(prop),
cil = ci.low(prop),
prop = mean(prop))
graph_data <-
all_data %>%
group_by(id, intonation, exclusion, exclusivity) %>%
summarise(counts= n()) %>%
spread(exclusivity, counts) %>%
replace(is.na(.), 0) %>%
mutate(total = EX + IN) %>%
gather(exclusivity, counts, EX:IN) %>%
mutate(prop = counts / total) %>%
group_by(exclusivity, intonation, exclusion) %>%
summarize(cih = ci.high(prop),
cil = ci.low(prop),
prop = mean(prop))
counts_table<-
all_data %>%
group_by(intonation, exclusion, exclusivity) %>%
summarise(counts= n()) %>%
spread(exclusivity, counts) %>%
replace(is.na(.), 0) %>%
mutate(total = IN + EX)
exclusivity_overall <-
all_data %>%
group_by(exclusivity) %>%
summarise(counts= n()) %>%
spread(exclusivity, counts) %>%
replace(is.na(.), 0) %>%
mutate(total = IN + EX) %>%
gather(exclusivity, counts, EX:IN) %>%
mutate(prop = counts / total)
cds_disjunction_model <- summary(glmer(exclusivity ~ intonation + exclusion + (1|id), family="binomial", data=all_data))
ggplot(graph_data, aes(x= exclusivity, y=prop, fill=exclusivity)) +
geom_col(width=0.7) +
geom_linerange(aes(ymax = cih, ymin = cil)) +
guides(fill=FALSE) +
theme_few() +
labs(title = "", x = "", y = "") +
scale_colour_solarized() + facet_grid(exclusion~intonation)
library (ggplot2)
library (scales)
library(grid)
library(gridExtra)
alex_data <- read.csv("../2_annotated_data/ProvidenceData-alex.csv")
lily_data <- read.csv("../2_annotated_data/ProvidenceData-lily.csv")
will_data <- read.csv("../2_annotated_data/ProvidenceData-will.csv")
vio_data  <- read.csv("../2_annotated_data/ProvidenceData-vio.csv")
or_data <- rbind (alex_data, lily_data, will_data, vio_data)
# Overall frequency of
ggplot(or_data, aes(age_m)) +
geom_histogram(binwidth = 0.5) +
labs(x="Age (months)", y="Frequency", title= "") +
theme(text = element_text(size=14))
or_data
# Overall frequency of
ggplot(or_data, aes(age)) +
geom_histogram(binwidth = 0.5) +
labs(x="Age (months)", y="Frequency", title= "") +
theme(text = element_text(size=14))
# Overall frequency of
ggplot(or_data, aes('age')) +
geom_histogram(binwidth = 0.5) +
labs(x="Age (months)", y="Frequency", title= "") +
theme(text = element_text(size=14))
alex_data <- read.csv("../2_annotated_data/ProvidenceData-alex.csv")
lily_data <- read.csv("../2_annotated_data/ProvidenceData-lily.csv")
will_data <- read.csv("../2_annotated_data/ProvidenceData-will.csv")
vio_data  <- read.csv("../2_annotated_data/ProvidenceData-vio.csv")
or_data <- rbind (alex_data, lily_data, will_data, vio_data)
# Overall frequency of
ggplot(or_data, aes(age)) +
geom_histogram(binwidth = 0.5) +
labs(x="Age (months)", y="Frequency", title= "") +
theme(text = element_text(size=14))
ggplot(filter(or_data, syncat!="S" & disjunct!="EXC" & intonation!=2), aes(connective)) +
geom_bar(aes(), width = 0.5, fill="navyblue") +
labs(x="", y="", title= "")+
theme(text = element_text(size=30))
OR_alex  <- ggplot(alex_data, aes(connective)) +
geom_bar(aes(y = (..count..)/sum(..count..)), width = 0.5) +
scale_y_continuous(labels=percent_format()) +
labs(x="Alex", y="", title= "")+
theme(text = element_text(size=20))
OR_lily  <- ggplot(lily_data, aes(connective)) +
geom_bar(aes(y = (..count..)/sum(..count..)), width = 0.5) +
scale_y_continuous(labels=percent_format()) +
labs(x="Lily", y="", title= "") +
theme(text = element_text(size=20))
OR_will  <- ggplot(will_data, aes(connective)) +
geom_bar(aes(y = (..count..)/sum(..count..)), width = 0.5) +
scale_y_continuous(labels=percent_format()) +
labs(x="William", y="", title= "") +
theme(text = element_text(size=20))
OR_vio  <- ggplot(vio_data, aes(connective)) +
geom_bar(aes(y = (..count..)/sum(..count..)), width = 0.5) +
scale_y_continuous(labels=percent_format()) +
labs(x="Violet", y="", title= "") +
theme(text = element_text(size=20))
OR_sem  <- ggplot(or_data, aes(connective)) +
geom_bar(aes(y = (..count..)/sum(..count..)), width = 0.5) +
scale_y_continuous(labels=percent_format()) +
labs(x="", y="", title= "Connective Meanings") +
theme(text = element_text(size=20))
grid.arrange(OR_will, OR_vio, OR_alex, OR_lily, ncol = 2, top = "connective meanings")
ggplot(or_data, aes(connective)) +
geom_bar(aes(y = (..count..)/sum(..count..)), width = 0.5) +
scale_y_continuous(labels=percent_format()) +
labs(x="", y="", title= "")+
theme(text = element_text(size=20)) + facet_wrap(~disjunct)
ggplot(or_data, aes(connective)) +
geom_bar(aes(y = (..count..)/sum(..count..)), width = 0.5) +
scale_y_continuous(labels=percent_format()) +
labs(x="", y="", title= "")+
theme(text = element_text(size=20)) + facet_wrap(~Speech.Act)
library (ggplot2)
library (scales)
library(grid)
library(gridExtra)
alex_data <- read.csv("../2_annotated_data/ProvidenceData-alex.csv")
lily_data <- read.csv("../2_annotated_data/ProvidenceData-lily.csv")
will_data <- read.csv("../2_annotated_data/ProvidenceData-will.csv")
vio_data  <- read.csv("../2_annotated_data/ProvidenceData-vio.csv")
or_data <- rbind (alex_data, lily_data, will_data, vio_data)
# Overall frequency of
ggplot(or_data, aes(age_m)) +
geom_histogram(binwidth = 0.5) +
labs(x="Age (months)", y="Frequency", title= "") +
theme(text = element_text(size=14))
ggplot(filter(or_data, syncat!="S" & disjunct!="EXC" & intonation!=2), aes(connective)) +
geom_bar(aes(), width = 0.5, fill="navyblue") +
labs(x="", y="", title= "")+
theme(text = element_text(size=30))
alex_data <- read.csv("../2_annotated_data/ProvidenceData-alex.csv")
lily_data <- read.csv("../2_annotated_data/ProvidenceData-lily.csv")
will_data <- read.csv("../2_annotated_data/ProvidenceData-will.csv")
vio_data  <- read.csv("../2_annotated_data/ProvidenceData-vio.csv")
or_data <- rbind (alex_data, lily_data, will_data, vio_data)
ggplot(filter(or_data, syncat!="S" & disjunct!="EXC" & intonation!=2), aes(connective)) +
geom_bar(aes(), width = 0.5, fill="navyblue") +
labs(x="", y="", title= "")+
theme(text = element_text(size=30))
ggplot(or_data, aes(connective)) +
geom_bar(aes(y = (..count..)/sum(..count..)), width = 0.5) +
scale_y_continuous(labels=percent_format()) +
labs(x="", y="", title= "") + facet_wrap(~Speech.Act)
ggplot(or_data, aes(connective)) +
geom_bar(aes(y = (..count..)/sum(..count..)), width = 0.5) +
scale_y_continuous(labels=percent_format()) +
labs(x="", y="", title= "") + facet_wrap(~Speech.Act)
ggplot(or_data, aes(disjunct)) +
geom_bar(aes(), width = 0.5) +
labs(x="", y="", title= "Intonation Types") + facet_wrap(~intonation)
ggplot(or_data, aes(connective)) +
geom_bar(aes(y = (..count..)/sum(..count..)), width = 0.5) +
scale_y_continuous(labels=percent_format()) +
labs(x="", y="", title= "Intonation type per implication") + facet_wrap(~intonation)
ggplot(filter(or_data, intonation==0), aes(connective)) +
geom_bar(aes(), width = 0.5, fill="navyblue") +
labs(x="", y="", title= "") +
theme(text = element_text(size=30))+
scale_x_discrete(drop = FALSE)
alex_data <- read.csv("../2_annotated_data/ProvidenceData-alex.csv")
lily_data <- read.csv("../2_annotated_data/ProvidenceData-lily.csv")
will_data <- read.csv("../2_annotated_data/ProvidenceData-will.csv")
vio_data  <- read.csv("../2_annotated_data/ProvidenceData-vio.csv")
or_data <- rbind (alex_data, lily_data, will_data, vio_data)
